//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkContext {

    public NetworkEntity shouldConnectEntity { get { return GetGroup(NetworkMatcher.ShouldConnect).GetSingleEntity(); } }

    public bool isShouldConnect {
        get { return shouldConnectEntity != null; }
        set {
            var entity = shouldConnectEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().isShouldConnect = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class NetworkEntity {

    static readonly ShouldConnectComponent shouldConnectComponent = new ShouldConnectComponent();

    public bool isShouldConnect {
        get { return HasComponent(NetworkComponentsLookup.ShouldConnect); }
        set {
            if (value != isShouldConnect) {
                var index = NetworkComponentsLookup.ShouldConnect;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : shouldConnectComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class NetworkMatcher {

    static Entitas.IMatcher<NetworkEntity> _matcherShouldConnect;

    public static Entitas.IMatcher<NetworkEntity> ShouldConnect {
        get {
            if (_matcherShouldConnect == null) {
                var matcher = (Entitas.Matcher<NetworkEntity>)Entitas.Matcher<NetworkEntity>.AllOf(NetworkComponentsLookup.ShouldConnect);
                matcher.componentNames = NetworkComponentsLookup.componentNames;
                _matcherShouldConnect = matcher;
            }

            return _matcherShouldConnect;
        }
    }
}
