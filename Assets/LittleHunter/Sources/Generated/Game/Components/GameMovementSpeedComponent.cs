//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity movementSpeedEntity { get { return GetGroup(GameMatcher.MovementSpeed).GetSingleEntity(); } }
    public MovementSpeedComponent movementSpeed { get { return movementSpeedEntity.movementSpeed; } }
    public bool hasMovementSpeed { get { return movementSpeedEntity != null; } }

    public GameEntity SetMovementSpeed(float newValue) {
        if (hasMovementSpeed) {
            throw new Entitas.EntitasException("Could not set MovementSpeed!\n" + this + " already has an entity with MovementSpeedComponent!",
                "You should check if the context already has a movementSpeedEntity before setting it or use context.ReplaceMovementSpeed().");
        }
        var entity = CreateEntity();
        entity.AddMovementSpeed(newValue);
        return entity;
    }

    public void ReplaceMovementSpeed(float newValue) {
        var entity = movementSpeedEntity;
        if (entity == null) {
            entity = SetMovementSpeed(newValue);
        } else {
            entity.ReplaceMovementSpeed(newValue);
        }
    }

    public void RemoveMovementSpeed() {
        movementSpeedEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MovementSpeedComponent movementSpeed { get { return (MovementSpeedComponent)GetComponent(GameComponentsLookup.MovementSpeed); } }
    public bool hasMovementSpeed { get { return HasComponent(GameComponentsLookup.MovementSpeed); } }

    public void AddMovementSpeed(float newValue) {
        var index = GameComponentsLookup.MovementSpeed;
        var component = (MovementSpeedComponent)CreateComponent(index, typeof(MovementSpeedComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMovementSpeed(float newValue) {
        var index = GameComponentsLookup.MovementSpeed;
        var component = (MovementSpeedComponent)CreateComponent(index, typeof(MovementSpeedComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMovementSpeed() {
        RemoveComponent(GameComponentsLookup.MovementSpeed);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMovementSpeed;

    public static Entitas.IMatcher<GameEntity> MovementSpeed {
        get {
            if (_matcherMovementSpeed == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MovementSpeed);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMovementSpeed = matcher;
            }

            return _matcherMovementSpeed;
        }
    }
}
